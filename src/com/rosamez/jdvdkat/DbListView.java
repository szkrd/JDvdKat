/*
 * DbListView.java
 *
 * Created on 2010.05.25., 20:59:40
 */

package com.rosamez.jdvdkat;

import java.awt.event.KeyEvent;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;
import org.jdesktop.application.Action;

/**
 *
 * @author Szabolcs Kurdi
 */
public class DbListView extends javax.swing.JDialog {
    private JDvdKatApp app;
    private DefaultListModel jListDbsModel = new DefaultListModel();
    private String selectedDbName;

    /** Creates new form DbListView */
    public DbListView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonAction = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListDbs = new javax.swing.JList();
        jButtonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(com.rosamez.jdvdkat.JDvdKatApp.class).getContext().getResourceMap(DbListView.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(174, 250));
        setModal(true);
        setName("Form"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(com.rosamez.jdvdkat.JDvdKatApp.class).getContext().getActionMap(DbListView.class, this);
        jButtonAction.setAction(actionMap.get("accept")); // NOI18N
        jButtonAction.setText(resourceMap.getString("jButtonAction.text")); // NOI18N
        jButtonAction.setName("jButtonAction"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jListDbs.setName("jListDbs"); // NOI18N
        jListDbs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListDbsMouseClicked(evt);
            }
        });
        jListDbs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jListDbsKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jListDbs);

        jButtonCancel.setAction(actionMap.get("close")); // NOI18N
        jButtonCancel.setText(resourceMap.getString("jButtonCancel.text")); // NOI18N
        jButtonCancel.setName("jButtonCancel"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButtonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonAction))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAction)
                    .addComponent(jButtonCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jListDbsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jListDbsKeyPressed
        int keyCode = evt.getKeyCode();
        if (keyCode == KeyEvent.VK_ENTER) {
            accept();
            evt.consume();
        } else if (keyCode == KeyEvent.VK_ESCAPE) {
            close();
        }
    }//GEN-LAST:event_jListDbsKeyPressed

    private void jListDbsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListDbsMouseClicked
        int clickCount = evt.getClickCount();
        if (clickCount == 2) {
            accept();
        }
    }//GEN-LAST:event_jListDbsMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                DbListView dialog = new DbListView(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    /**
     * Initialize this form (probably this is not the "java way",
     * and also I don't know much about Matisse...): populate the list
     */
    public void init() {
        app = JDvdKatApp.getApplication();
        jListDbs.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        String activeDb = app.dbManager.getActiveDbNameShort();
        int activeIdx = 0;
        String[] dbNames = app.dbManager.getDbNames();
        jListDbs.setModel(jListDbsModel);
        jListDbsModel.clear();

        for (int i = 0; i < dbNames.length; i++) {
            String dbName = dbNames[i];
            jListDbsModel.add(i, dbName);
            if (activeDb != null && activeDb.equals(dbName)) {
                activeIdx = i;
            }
        }
        jListDbs.setSelectedIndex(activeIdx);
        jListDbs.requestFocusInWindow();

        jButtonCancel.setMnemonic(KeyEvent.VK_C);
    }

    public void initShow() {
        init();
        this.setVisible(true);
    }

    protected void setupActionButton(String text, int mnemonic) {
        jButtonAction.setText(text);
        jButtonAction.setMnemonic(mnemonic);
    }

    /**
     * Return the stored selection
     * @return
     */
    public String getSelectedDb() {
        return selectedDbName;
    }

    /**
     * Store current value and hide
     */
    @Action
    public void accept() {
        selectedDbName = (String)jListDbs.getSelectedValue();
        this.setVisible(false);
    }

    /**
     * Reset stored value and hide
     */
    @Action
    public void close() {
        selectedDbName = null;
        this.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAction;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JList jListDbs;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
